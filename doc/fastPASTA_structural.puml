@startuml fastPASTA_structural_diagram
!theme toy from https://raw.githubusercontent.com/plantuml/plantuml/master/themes
' Carto color palette
' light blue       #88CCEE
' light pink/red   #CC6677
' light yellow     #DDCC77
' dark green       #117733
' Dark purple      #332288
' Pink             #AA4499
' Light blue/green #44AA99
' Brown/yellow     #999933
' Dark purple      #882255
' Dark red         #661100
' Medium blue      #6699CC
' Grey             #888888

Title <size:60>**fastPASTA Structural Diagram**</size>
hide empty members
hide empty methods

package words #FAFAFA {
    interface RDH << trait >> ##[dashed]purple {
        + load <T>( reader : &T) : Result<RDH, Error>
        + load_from_rdh0<T>( reader : &T, rdh0 : Rdh0) : Result<RDH, Error>
        + version() : u8
        + rdh0() : &Rdh0
        + rdh1() : &Rdh1
        + rdh2() : &Rdh2
        + rdh3() : &Rdh3
    }
    interface ByteSlice << trait >>  ##[dashed]purple {
        + to_byte_slice() : &[u8]
    }
    RDH --> ByteSlice  : uses
    note "Many generic structs and functions use\nthe RDH trait indirectly by requiring\n\
the generic type to implement it.\n\n\
The RDH trait itself, requires implementers to\n\
implement certain other traits as well:\n\
* ByteSlice\n\
* Debug\n\
* Display\n\
* PartialEq\n\
As well as some <i>auto traits</i>:\n\
* Sized\n\
* Sync\n\
* Send" as RdhNote
    'PartialEq + Sized + ByteSlice + std::fmt::Display + std::fmt::Debug + Sync + Send
}


package "stats" #FAFAFA {
    struct StatsController {
    }

    struct Report {
    }

    StatsController --> Report : uses
}



package "input" #FAFAFA {
' Data wrapper
    struct CdpChunk<T implements RDH> {
        - rdhs: Vec<T>
        - payloads: Vec<Vec<u8>>
        - rdh_mem_pos: Vec<u64>
    }
' Input module
    interface ScanCDP<T implements RDH> << trait >> ##[dashed]purple {
        + load_rdh_cru<T>() : Result<T, Error>
        + load_payload_raw( payload_size : usize) : Result<Vec<u8>, Error>
        + load_cdp<T>() : Result<CdpChunk<T>, Error>
        + load_next_rdh_to_filter() : Result<T, Error>
        + current_mem_pos() : u64
    }
    struct CdpWrapper<T implements RDH> {
        - rdh: T
        - payload: Vec<u8>
        - mem_pos: u64
    }
    ScanCDP --> CdpWrapper : uses



    struct InputScanner<R implements BufferedReaderWrapper> implements ScanCDP {
        - reader: Box<R>
        - link_to_filter: Option<Vec<u8>>
    }

    struct MemPosTracker {
        + memory_address_bytes: u64
        - offset_next : i64
        - rdh_cru_size_bytes: u64
        + next(rdh_offset : u64) : i64
    }
    InputScanner *-down- MemPosTracker : contains

    interface BufferedReaderWrapper ##[dashed]purple {
        + read_exact( buf : &[u8]) : std::io::Result<()>
        + seek_relative( offset : i64) : std::io::Result<()>
    }
    BufferedReaderWrapper -[hidden]up-> InputScanner

    struct StdInReaderSeeker<R> implements BufferedReaderWrapper {
        + reader: Box<R>
    }
}


' Output module
package "data_write" #FAFAFA {
    interface Writer<T implements RDH> << trait >>  ##[dashed]purple{
        + write( data : &[u8]) : std::io::Result<()>
        + push_rdhs( rdhs : Vec<T>)
        + push_payloads( payloads : Vec<Vec<u8>>)
        + push_cdp_chunk( cdp_chunk : CdpChunk<T>)
        + flush() : std::io::Result<()>
    }
    struct BufferedWriter<T implements RDH> implements Writer
    {
        - filtered_rdhs_buffer: Vec<T>
        - filtered_payloads_buffer: Vec<Vec<u8>>
        - buf_writer: Option<BufWriter<File>>
    }
Writer --> CdpChunk : uses
}



package "validators" #FAFAFA {
    struct CdpRunningValidator<T implements RDH> {
        + reset_fsm()
        + check( gbt_word: &[u8])
        + set_current_rdh( rdh: &T, rdh_mem_pos : u64)
    }
    CdpRunningValidator -up-> StatsController : uses

    struct RdhCruSanityValidator<T implements RDH> {
        + sanity_check( rdh: &T) : Result<(), String>
    }

    struct RdhCruRunningChecker<T implements RDH> {
        + check( rdh: &T) : Result<(), String>
    }
    'Formatting helpers
    RdhCruRunningChecker -[hidden]up-> CdpRunningValidator
    RdhCruSanityValidator -[hidden]up-> RdhCruRunningChecker
}

package "util" #FAFAFA {
    struct Config {
        + dump_rdhs() : bool
        + sanity_checks() : bool
        + file() : PathBuf
        + link_to_filter() : Option<u8>
        + output_file() : Option<PathBuf>
    }
}




InputScanner -up-> StatsController : uses
StatsController -up-> Config : uses
BufferedWriter -up-> Config : uses
InputScanner -up-> Config : uses


@enduml
