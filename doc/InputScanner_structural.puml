@startuml
Title **InputScanner 'Class' Diagram**

hide empty members
hide empty methods

interface ScanCDP {
    + load_rdh_cru<T: RDH>() -> Result<T, Error>
    + load_payload_raw(payload_size: usize) -> Result<Vec<u8>, Error>
    + load_cdp<T: RDH>() -> Result<(T, Vec<u8>), Error>
}

interface RDH implements Debug, PartialEq, Sized, ByteSlice {
    + load<T: Read>(reader: &mut T) -> Result<Self, Error>
}

interface Debug
interface PartialEq
interface Sized
interface ByteSlice {
    to_byte_slice() -> &[u8]
}


struct InputScanner implements ScanCDP {
    - reader: BufReader<File>
    - link_to_filter: Option<u8>
    + load_rdh_cru<T: RDH>()) -> Result<T, Error>
    + load_payload_raw(payload_size: usize) -> Result<Vec<u8>, Error>
}

struct FilePosTracker {
    + offset_next : i64
    + memory_address_bytes: u64
    - rdh_cru_size_bytes: u64
    + next( rdh_offset : u64 ) -> i64
}

struct Stats {
    + rdhs_seen : u64
    + rdhs_filtered : u64
    + payload_size : u64
    + links_observed : Vec<u8>
    + processing_time : u64

    + print()
    + print_time()
}

struct Config {
    + dump_rdhs() -> bool
    + sanity_checks() -> bool
    + file() -> PathBuf
    + link_to_filter() -> Option<u8>
    + output_file() -> Option<PathBuf>
}

interface Read<R>

struct BufReader<R> implements Read
{
    - inner: R
    - buf: Buffer
}



struct Reader implements Read
struct Buffer



BufReader *-- Buffer : contains
BufReader o-- Reader : Aggregates

InputScanner *-- BufReader : contains
InputScanner *-- FilePosTracker : contains
InputScanner o-- Stats : Aggregates
InputScanner --> Config : uses
InputScanner --> RDH : uses

ScanCDP --> RDH : uses

note top of BufReader : Implements Read for types R that implement Read\nSuch that BufReader can use R as if it implements Read

@enduml
