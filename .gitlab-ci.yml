image: "rust:latest"

default:
  before_script:
    - hostname -I
    - whoami
    - rustc --version
    - cargo --version

# Setup a cache to cache job parts between jobs to ensure faster builds
cache:
  - key: "$CI_JOB_NAME"
    untracked: true
    paths:
      - $CI_PROJECT_DIR/target/

# Set any required environment variables here
variables:
  RUST_BACKTRACE: "FULL"

stages:
  - code-quality
  - build-and-test
  - release

pre-commit:
  image: python:3.9
  stage: code-quality
  before_script:
    - pip install pre-commit
  script:
    - python3 --version
    - pre-commit --version
    - pre-commit run --all-files --show-diff-on-failure

lint:
  stage: code-quality
  script:
    - rustup component add clippy
    - cargo check
    - cargo clean
    - cargo clippy -- -D warnings

format:
  stage: code-quality
  script:
    - rustup component add rustfmt
    - cargo fmt -- --check

audit:
  stage: code-quality
  script:
    - cargo install cargo-audit
    - cargo audit

rust-latest:
  stage: build-and-test
  image: rust:latest
  script:
    - cargo build --verbose
    - cargo test --verbose
  artifacts:
    name: "debug_${CI_COMMIT_SHA}"
    paths:
    - ./target
    expire_in: 3 mos

rust-nightly:
  stage: build-and-test
  image: rustlang/rust:nightly
  script:
    - cargo build --verbose
    - cargo test --verbose
  allow_failure: true

## For release build
build-release-latest:
  stage: release
  rules:
    - if: $CI_COMMIT_TAG                 # Run this job when a tag is created
  only:
    - release
  image: rust:latest
  script:
    - echo "running release job"
    - cargo build -r --verbose
  artifacts:
    name: "release_${CI_COMMIT_TAG}"
    paths:
    - ./target

